name: Back End of python JS Application - CD
on: [workflow_dispatch]
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'starter/backend/**'

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend/

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install pipenv packages
      run: pip install pipenv

    - name: Install Dependencies
      run: pipenv install

    - name: Run the tests
      run: pipenv run test

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend/

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install pipenv package
      run: pip install pipenv

    - name: Install Dependencies
      run: |
        pipenv install
        pipenv install flake8

    - name: Run the tests
      run: pipenv run lint
  
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend/

    needs: [lint, test]   # This job depends on the "build" job

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_K8S_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_K8S }}
        aws-region: us-east-1

    - name: Setup Kubectl
      uses: azure/setup-kubectl@v3
      id: install
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Build, tag, and push docker image to Amazon ECR
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: backend
        # IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build docker build --tag mp-backend:${{ env.IMAGE_TAG }} .
        docker push $REGISTRY/$REPOSITORY:${{ env.IMAGE_TAG }}

    # - name: Login to Docker Hub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Build the image
    #   run: |
    #     docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-backend:${{ github.sha }} .
    #     docker run --name mp-backend -p 3000:3000 -d mp-backend:${{ github.sha }}

    - name: Kubeconfig Auth
      run: aws eks update-kubeconfig --name cluster

    - name: Apply the manifests to the cluster
      env:
        REPOSITORY: backend
      run: |
        cd k8s
        kustomize edit set image backend=${{ steps.login-ecr.outputs.registry }}/backend:${{ env.IMAGE_TAG }}
        kustomize build | kubectl apply -f -
    


    
